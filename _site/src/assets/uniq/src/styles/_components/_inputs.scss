$input-height: 55px;
$checkbox-size: 24px;

@mixin input-container() {
    @include flex();
    @include flex-wrap();
    @include align-items-center();
    @include height-modifiers();
    margin-bottom: 20px;
    border-radius: 4px;
    overflow: hidden;
    white-space: nowrap;
    will-change: border;

    @include breakpoint(small) {
        width: 100%;
        max-width: 100%;
        padding: 0;
        margin-bottom: 5px;
    }
    
    &--bordered {
        @include breakpoint(small) {
            padding: 20px;
            border: 2px solid color('input', 'mobile-border');
            border-radius: 4px;
        }
    }
    
    &--focused {
        @include breakpoint(small) {
            background-color: color('input', 'focus');
        }
    }

    &--full-width {
        width: 100%;
    }
}

@mixin input() {
    @warn "TODO: Implement new heights and color schemes";
    // height-modifiers must be above height so modifiers override the default height
    height: $input-height;
    @include height-modifiers();

    border: 0;
    font-size: em(20px);
    color: color('text', 'input');
    padding: 0 14px;
    
    // padding-right to allow inputs to have a right icon (ex: validation icons)
    padding-right: 44px;

    will-change: border;
    -webkit-appearance: none;
    
    &:focus {
        border: 2px solid color('primary', 'light');
        outline: none;
    }

    &--range {
        position: relative;
        width: calc(100% - 134px);
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
        border: 2px solid color('borders');
        border-right: 0;
        -webkit-appearance: none;
    }

    &--transparent {
        background-color: transparent;
        border: 0;
    }
    
    &--full-width {
        width: 100%;
    }
    
    // modifiers that handle border OVERRIDE each other, the last is applied
    &--bordered {
        border: 2px solid color('input', 'border');
    }

    &--warning {
        border: 2px solid color('feedback', 'warning');
    }

    &--error {
        border: 2px solid color('feedback', 'error');
    }

    &--success {
        border: 2px solid color('feedback', 'success');
    }
}

@mixin input-right-icon() {
    padding: 0;
    margin-right: 0;
    transform: translate3d(-100%, 0, 0) translate3d(-14px, 0, 0);
    border: 0;

    svg {
        fill: currentColor;
        width: 17px; 
        height: 13px;
    }
    
    &--warning {
        svg {
            fill: color('feedback', 'warning');
        }
    }

    &--error {
        svg {
            fill: color('feedback', 'error');
        }
    }

    &--success {
        svg {
            fill: color('feedback', 'success');
        }
    }

}

@mixin input-button(){
    @include flex();
    @include align-items-center();
    @include justify-content-center();

    // height-modifiers must be above height so modifiers override the default height
    height: $input-height;
    @include height-modifiers();

    width: 67px;
    border: 2px solid color('borders');
    border-left: 1px solid color('borders');
    font-size: em(24px);
    font-weight: bold;
    color: color('primary');
    will-change: background-color;
    
    &:first-of-type {
        border-right: 0;
    }

    &:last-of-type {
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
    }
    
    svg {
        fill: color('primary');
    }

    &:hover {
        background-color: color('buttons', 'hover');
        cursor: pointer;
    }

    &:active {
        background-color: color('background', 'light');
    }

    &[disabled],
    &--disabled {
        svg {
            fill: color('input', 'disabled');
        }
    }
}

@mixin textarea() {
    @include input();
    max-width: 410px;
    height: auto;
    padding: 12px;
    border: 1px solid color('input', 'border');
    border-radius: 4px;
    font-size: em(18px);
    
    & + &-counter {
        @include body();
        max-width: 410px;
        text-align: right;
    }

    &--naked {
        max-width: 100%;
        padding: 0;
        border: 0;
        border-radius: 0;
        outline: none;
        background-color: transparent;
    }
}

// BASIC CHECKBOX STYLES
@mixin checkbox() {
    @include flex();
    @include align-items-center();
    @include justify-content-center();
    width: $checkbox-size;
    height: $checkbox-size;
    border: 1px solid color('input', 'border');
    margin-right: 20px;
    border-radius: 4px;
    will-change: background-color;
    
    
    svg {
        display: none;
        fill: color('primary');
    }

    & + label {
        height: $checkbox-size;
        line-height: $checkbox-size;
        font-size: em(18px);
        color: color('text', 'body');
        will-change: color;
    }

    &:focus,
    &:checked,
    &--checked {
        border: 1px solid color('primary');
        background-color: color('primary');
        
        svg {
            display: block;
            fill: color('background');
        }

        & + label {
            color: color('primary');
        }
    }
}

@mixin radio-button() {
    @include flex();
    @include flex-wrap();
    @include align-items-center();

    input[type="radio"] {
        visibility: hidden;
        width: 0;
        height: 0;
    }

    label {
        position: relative;
        padding-left: #{$checkbox-size + 20px};
        height: $checkbox-size;
        line-height: $checkbox-size;
        font-size: em(18px);
        color: color('text', 'body');
        will-change: color;

        &:before,
        &:after {
            content: " ";
            position: absolute;
            display: block;
            border-radius: 50%;
            top: 0;
            left: 0;
        }
        &:before {
            width: $checkbox-size;
            height: $checkbox-size;
            border: 2px solid color('input', 'border');
            will-change: border;
        }
        &:after {
            width: 16px;
            height: 16px;
            will-change: background-color;
            top: 4px;
            left: 4px;
        }
    }

    input[type="radio"]:checked + label {
        color: color('primary');
        
        &:before {
            border: 2px solid color('primary');
        }
        &:after {
            background-color: color('primary');
        }
    }
}

@mixin mobile-number() {
    @include flex();
    @include align-items-center();
    position: relative;
    height: $input-height;

    &__country-code {
        position: relative;
        width: 130px;
        height: $input-height;
        line-height: $input-height;
        padding: 0 20px;
        background-color: color('input', 'border');
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
        font-size: em(18px);
        color: color('text', 'title');

        &:hover {
            cursor: pointer;
        }

        &:before,
        &:after {
            content: "";
            position: absolute;
            display: block;
            width: 7px;
            height: 1px;
            top: 50%;
            background-color: color('text', 'title');
            will-change: transform;
        }

        &:before {
            right: 20px;
            transform: rotate(45deg);
        }

        &:after {
            right: 15px;
            transform: rotate(-45deg);
        }

        &--active {
            &:before {
                transform: rotate(-45deg);
            }

            &:after {
                transform: rotate(45deg);
            }
        }

        &--active &__dropdown {
            display: block;
        }

        img {
            display: inline-block;
            width: 20px;
            height: 13px;
            margin-right: 10px;
            border-radius: 2px;
            overflow: hidden;
        }

        &__dropdown {
            position: absolute;
            display: none;
            width: 130px;
            top: $input-height;
            left: 0;
            background-color: color('background', 'light');
            border-bottom-right-radius: 4px;
            border-bottom-left-radius: 4px;
            
            &__item {
                @include flex();
                @include align-items-center();
                height: 46px;
                line-height: 46px;
                padding: 20px;
                
                &:hover {
                    cursor: pointer;
                    background-color: color('input', 'border');
                }

                &:last-child {
                    margin-bottom: 0;
                }
            }
        }
    }
    
    input {
        @include input();
        width: calc(100% - 130px);
        border: 2px solid color('input', 'border');
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
    }
}

@mixin input-price() {
    @include row();
    @include justify-content-center();
    @include align-items-center();
    border: 2px solid color('input', 'border');
    border-radius: 4px;

    input,
    &__value {
        @include input();
        font-size: em(20px);
        margin: 0;
    }

    input {
        max-width: 30%;
        padding-left: 0;
        border: 0;
        text-align: right;

        &:focus {
            border: 0;
        }
    }

    &__value {
        max-width: 70%;
        padding: 0;
        padding-right: 36px;
        border-left: 0;
        line-height: $input-height;
    }

    &__currency {
        color: color('text');
    }
    
    &__interval {
        color: color('text', 'input');
    }

    @include breakpoint(small) {
        margin: 0;
        padding: 0;

        input,
        &__value {
            width: 50%;
        }
    }
}

@mixin toggle() {
    position: relative;
    width: 60px;
    height: 32px;
    overflow: hidden;
    z-index: 2;

    background: color('input', 'disabled');
    cursor: pointer;
    border-radius: 6px;

    &__button {
        width: 22px;
        height: 22px;

        border-radius: 4px;
        background: color('buttons', 'primary');
    }    

    &__icon {
        @include flex();
        @include align-items-center()
        position: relative;
        width: 150%;
        height: 100%;

        padding: 5px;
        border-radius: 6px;
        transform: translate3d(-26px, 0, 0);
        will-change: transform;

        svg {
            margin: 6px;
            &:first-child {
                width: 15px;
                height: 11px;
            }
            &:last-child {
                margin-left: 8px;
                width: 11px;
                height: 11px;
            }
        }
    }


    &__input:checked + &__icon {
        background: color('primary');
        transform: translate3d(0, 0, 0);
    }


    &__input {
        position: absolute;
        left: -99999px;
    }
    
    &__label {
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: 2;
    }
}
